/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>

#define PLUGIN "Block Change Map"
#define VERSION "1.0"
#define AUTHOR "D4rkSiD3Rs"

new bool: blockmapchange;
new g_cmd1[512];

public plugin_init()
{
	register_plugin(PLUGIN, VERSION, AUTHOR);
	BlockChangingMap();
}

public BlockChangingMap()
{
	blockmapchange = true;
	set_task(900.0, "ActivateChangingMap");
}

public ActivateChangingMap()
{
	blockmapchange = false;
}

public client_command(id)
{
	read_argv(0, g_cmd1, 511);
	
	if(blockmapchange)
	{
		if(equali(g_cmd1, "amx_votemap") || equali(g_cmd1, "amx_map"))
		{
			ChatColor(id, "!g[GG] !nYou can't change the map before playing more than !t15 minutes !n!");
			console_print(id, "[GG] You can't change the map before playing more than 15 minutes !");
			return PLUGIN_HANDLED;
		}
	}

	return PLUGIN_CONTINUE;
}

stock ChatColor(const id, const input[], any:...)
{
	new count = 1, players[32];
	static msg[191];
	vformat(msg, 190, input, 3);
	
	replace_all(msg, 190, "!g", "^4"); // Verde
	replace_all(msg, 190, "!n", "^1"); // Galben
	replace_all(msg, 190, "!t", "^3"); // CT-Albastru ; T-Rosu
	replace_all(msg, 190, "!t2", "^0"); // CT-Albastru2 ; T-Rosu2
	
	if (id) players[0] = id; else get_players(players, count, "ch");
	{
		for (new i = 0; i < count; i++)
		{
			if (is_user_connected(players[i]))
			{
				message_begin(MSG_ONE_UNRELIABLE, get_user_msgid("SayText"), _, players[i]);
				write_byte(players[i]);
				write_string(msg);
				message_end();
			}
		}
	}
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang1036\\ f0\\ fs16 \n\\ par }
*/
